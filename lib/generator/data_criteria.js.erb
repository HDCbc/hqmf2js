// Measure variables
<%- if measure_period -%>
var MeasurePeriod = {
  "low": <%= js_for_value(measure_period.low) %>,
  "high": <%= js_for_value(measure_period.high) %>
}
hqmfjs.MeasurePeriod = function(patient) {
  return new hQuery.CodedEntry(
    {
      "start_time": MeasurePeriod.low.asDate().getTime()/1000,
      "end_time": MeasurePeriod.high.asDate().getTime()/1000,
      "codes": {}
    }
  );
}
<%- end -%>
<%- all_criteria.select {|c| c.type == :variable}.each do |criteria| -%>
var <%=  js_name(criteria) %> = <%= js_for_value(criteria.value) %>;
<%- end -%>

// Data critera
<%- all_criteria.select {|c| c.type != :variable}.each do |criteria| -%>
hqmfjs.<%= js_name(criteria) %> = function(patient) {
  <%- if criteria.type == :characteristic -%>
  var value = patient.<%= criteria.property %>(<%= js_for_date_bound(criteria) if criteria.property == :age %>);
  return matchingValue(value, <%= js_for_bounds(criteria.value) %>);
  <%- else -%>
  var codes = <%= js_for_code_list(criteria) %>;
  <%- if criteria.effective_time -%>
  <%- startExp = js_for_value(criteria.effective_time.low) -%>
  var start = <%= startExp %><%= '.asDate()' if startExp != 'null' %>;
  <%- endExp = js_for_value(criteria.effective_time.high) -%>
  var end = <%= endExp %><%= '.asDate()' if endExp != 'null' %>;
  var events = patient.<%= criteria.type %>().match(codes, start, end);
  <%- else -%>
  var events = patient.<%= criteria.type %>().match(codes);
  <%- end -%>
  <%- if criteria.value -%>
  events = filterEventsByValue(events, <%= js_for_bounds(criteria.value) %>);
  <%- end -%>
  <%- if criteria.subset_code -%>
  events = <%= criteria.subset_code %>(events);
  <%- end -%>
  <%- if criteria.temporal_reference -%>
  events = <%= criteria.temporal_reference.type %>(events, hqmfjs.<%= criteria.temporal_reference.reference.id %>(patient)<%= ", #{js_for_value(criteria.temporal_reference.offset)}" if criteria.temporal_reference.offset %>);
  <%- end -%>
  return events;
  <%- end -%>
}

<%- end -%>